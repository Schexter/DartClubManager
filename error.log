# üêõ ERROR.LOG - DartClubManager

Protokollierung aller Fehler, Probleme und deren L√∂sungen w√§hrend der Entwicklung.

Format:
```
[YYYY-MM-DD HH:MM:SS] ERROR: [Fehlerbeschreibung]
Ursache: [Was war die Ursache]
L√∂sung: [Wie wurde es gel√∂st]
Verbesserung: [Was kann man beim n√§chsten Mal besser machen]
---
```

---

## [2025-09-29 10:00:00] INFO: error.log initialisiert

**Status:** Keine Fehler bisher! üéâ

**Projekt-Start:** DartClubManager erfolgreich aufgesetzt.

---

## [2025-10-02 19:42:00] ERROR: PostgreSQL Authentifizierung fehlgeschlagen

**Fehlermeldung:**
```
FATAL: Passwort-Authentifizierung f√ºr Benutzer 'dartclub' fehlgeschlagen
SQL State: 28P01
```

**Ursache:**
Konflikt zwischen Spring Boot Docker Compose Integration und manuellem Docker Management:
- Dependency `spring-boot-docker-compose` war eingebunden aber deaktiviert
- Dies f√ºhrte zu Konflikten bei der Verbindungsherstellung
- Docker Container lief perfekt, aber Spring Boot konnte sich nicht verbinden
- Encoding-Probleme in Fehlermeldungen (CP1252 vs UTF-8)

**L√∂sung:**
1. Spring Boot Docker Compose Dependency in `build.gradle.kts` auskommentiert
2. Docker Compose Config aus `application.yml` entfernt
3. Docker Compose Config aus `application-local.yml` bereinigt
4. Gradle Cache gel√∂scht (`backend/build` und `.gradle`)
5. Docker komplett neu aufgesetzt (`docker compose down -v`)
6. PostgreSQL Container mit 15 Sekunden Wartezeit gestartet

**Verbesserungen f√ºr die Zukunft:**
- **Architektur-Entscheidung:** Entweder Spring Boot Docker Compose Integration ODER manuelles Management, niemals beides!
- **Dokumentation:** Troubleshooting-Guide erstellt (`docs/TROUBLESHOOTING_PostgreSQL_Auth.md`)
- **Test-Skript:** Automatisiertes Test-Skript f√ºr DB-Setup (`scripts/test-fix.bat`)
- **Health-Checks:** Wartezeit in Gradle Task von 1s auf 15s erh√∂ht
- **Clean State:** Bei DB-Problemen immer Volumes mit `-v` Flag l√∂schen

**Status:** ‚úÖ GEL√ñST

**Lessons Learned:**
1. Hybrid-L√∂sungen (teilweise aktiviert/deaktiviert) sind fehleranf√§llig
2. Windows-Encoding kann zu verwirrenden Fehlermeldungen f√ºhren
3. PostgreSQL braucht 10-15 Sekunden zum vollst√§ndigen Initialisieren
4. Volumes k√∂nnen alte Konfigurationen speichern - immer mit `-v` l√∂schen

---

## [2025-10-06 09:20:00] ERROR: PostgreSQL Authentifizierung fehlgeschlagen (ERNEUT)

**Fehlermeldung:**
```
FATAL: Passwort-Authentifizierung f√ºr Benutzer 'dartclub' fehlgeschlagen
SQL State: 28P01
Error Code: 0
```

**Ursache:**
Das Problem trat erneut auf - PostgreSQL Container hatte altes Volume mit anderem Passwort:
- Container lief (Status: Running)
- Aber das Volume enthielt eine alte DB-Initialisierung
- Passwort in `compose.yaml` = `dartclub_dev_password`
- Passwort in altem Volume = vermutlich anders oder nicht gesetzt
- Flyway konnte keine Verbindung aufbauen

**L√∂sung:**
1. Docker Container gestoppt: `docker compose down -v` (Volume l√∂schen!)
2. Container neu gestartet: `docker compose up -d` oder `gradlew.bat startDatabase`
3. 5-10 Sekunden warten bis PostgreSQL vollst√§ndig initialisiert ist
4. Backend neu starten: `gradlew.bat :backend:bootRun`

**Verbesserungen f√ºr die Zukunft:**
- **Gradle Task verbessern:** `startDatabase` sollte automatisch alte Container/Volumes l√∂schen
- **Health-Check:** Erweiterte Pr√ºfung ob Passwort korrekt ist
- **Dokumentation:** README.md um "Clean Start" Sektion erweitern
- **Script erstellen:** `clean-database.bat` f√ºr schnelles Reset

**Status:** ‚è≥ IN BEARBEITUNG (Backend wird neu gestartet)

**Lessons Learned:**
1. Bei DB-Problemen IMMER mit `-v` Flag Volumes l√∂schen
2. Alte Volumes k√∂nnen Stunden/Tage sp√§ter Probleme verursachen
3. Docker Volumes sind persistent √ºber Container-Neustarts hinweg

---

**Erstellt von Hans Hahn - Alle Rechte vorbehalten**
